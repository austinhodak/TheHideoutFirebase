name: "Branch Deploy"

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  deployments: write
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: github/branch-deploy@v4.0.0
        id: branch-deploy
        with:
          trigger: ".deploy"

      - name: Deploy - Development
        if: steps.branch-deploy.outputs.environment == 'development'
        uses: flame-app-studio/firebase-ci-ops@v1.8.3
        env:
          FIREBASE_CI_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
          TARGET: ${{ steps.branch-deploy.outputs.environment }}
          DEPLOY_DATABASE: false
          DEPLOY_FIRESTORE_RULES: false
          DEPLOY_STORAGE: false
          
      # Post comment on PR with development deploy info
      - uses: actions/github-script@5d03ada4b0a753e9460b312e61cc4f8fdeacf163 # pin@0.9.0
        if: ${{ steps.branch-deploy.outputs.continue == 'true' &&
          steps.branch-deploy.outputs.noop != 'true' &&
          steps.branch-deploy.outputs.environment == 'development' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Function Deployment - Development 🪐
            > Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
        # Post comment on PR with production deploy info
      - uses: actions/github-script@5d03ada4b0a753e9460b312e61cc4f8fdeacf163 # pin@0.9.0
        if: ${{ steps.branch-deploy.outputs.continue == 'true' &&
          steps.branch-deploy.outputs.noop != 'true' &&
          steps.branch-deploy.outputs.environment == 'production' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Function Deployment - Production 🌔
            > Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\``;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
